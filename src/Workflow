Alors, on commence à gérer les dépendances. Dans le cas d'une appli web qui se connecte à une base de données mySQL on
ajoute les dépendances mySQL dans le POM :

		<!-- dependency pour mySQL -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
			</dependency>
		<!--/dependency pour mySQL -->

Ensuite on règle dans application.properties des propriétés :

===============

#SQL thingies
spring.datasource.url=jdbc:mysql://localhost:3309/DropTEST?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#obligatoire pour indiquer le langage pour communiquer avec la BDD.
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#test appli:
spring.jba.hibernate.ddl-auto = create-drop / create / update

================

Ensuite on crée les modèles, avec les décorateurs qui vont de partout et le constructeur par défaut + getters & setters.
Ensuite le DAO associé à ce modèle (@Repository & extends JpaRepository<Object,PrimaryKeyType> et /done pour le DAO
Ensuite le controlleur (lié au DAO, avec @Autowired et régler les @getMapping etc).